"use strict";(self.webpackChunkneo_dev_portal=self.webpackChunkneo_dev_portal||[]).push([[1098],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(r),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,c(c({ref:t},p),{},{components:r})):n.createElement(f,c({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},44239:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),c=["components"],i={},l="Ledger.GetTransactionFromBlock Method",s={unversionedId:"n3/reference/scapi/framework/native/Ledger/GetTransactionFromBlock",id:"n3/reference/scapi/framework/native/Ledger/GetTransactionFromBlock",isDocsHomePage:!1,title:"Ledger.GetTransactionFromBlock Method",description:"Gets the specified transaction by the block index (or block hash) and transaction index.",source:"@site/docs/n3/reference/scapi/framework/native/Ledger/GetTransactionFromBlock.md",sourceDirName:"n3/reference/scapi/framework/native/Ledger",slug:"/n3/reference/scapi/framework/native/Ledger/GetTransactionFromBlock",permalink:"/website/docs/n3/reference/scapi/framework/native/Ledger/GetTransactionFromBlock",editUrl:"https://github.com/neo-project/neo-dev-portal/blob/master/docs/n3/reference/scapi/framework/native/Ledger/GetTransactionFromBlock.md",tags:[],version:"current",lastUpdatedBy:"Apisit",frontMatter:{},sidebar:"docs",previous:{title:"Ledger.GetTransaction Method",permalink:"/website/docs/n3/reference/scapi/framework/native/Ledger/GetTransaction"},next:{title:"Ledger.GetTransactionHeight Method",permalink:"/website/docs/n3/reference/scapi/framework/native/Ledger/GetTransactionHeight"}},p=[{value:"Syntax",id:"syntax",children:[]},{value:"Example",id:"example",children:[]}],u={toc:p};function d(e){var t=e.components,r=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ledgergettransactionfromblock-method"},"Ledger.GetTransactionFromBlock Method"),(0,o.kt)("p",null,"Gets the specified transaction by the block index (or block hash) and transaction index."),(0,o.kt)("p",null,"Namespace\uff1a",(0,o.kt)("a",{parentName:"p",href:"/website/docs/n3/reference/scapi/framework/native"},"Neo.SmartContract.Framework.Native")),(0,o.kt)("p",null,"Assembly: Neo.SmartContract.Framework"),(0,o.kt)("h2",{id:"syntax"},"Syntax"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"public static extern Transaction GetTransactionFromBlock(UInt256 blockHash, int txIndex);\npublic static extern Transaction GetTransactionFromBlock(uint blockHeight, int txIndex);\n")),(0,o.kt)("p",null,"Parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"blockHash: the hash of the specified block")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"blockHeight: the index of the specified block (block height)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"txIndex: transaction index. The transaction index starts from 0 and increases sequentially."))),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"public class Contract1 : SmartContract.Framework.SmartContract\n{\n    public static void GetFirstTransaction(uint block)\n    {\n        var tx = Ledger.GetTransactionFromBlock(block, 0);\n    }\n    public static void GetFirstTransaction(UInt256 block)\n    {\n        var tx = Ledger.GetTransactionFromBlock(block, 0);\n    }\n}\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/website/docs/n3/reference/scapi/framework/native/Ledger"},"Back")))}d.isMDXComponent=!0}}]);