"use strict";(self.webpackChunkneo_dev_portal=self.webpackChunkneo_dev_portal||[]).push([[3671],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return f}});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=a.createContext({}),i=function(e){var r=a.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},u=function(e){var r=i(e.components);return a.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},m=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=i(t),f=n,d=m["".concat(c,".").concat(f)]||m[f]||p[f]||o;return t?a.createElement(d,s(s({ref:r},u),{},{components:t})):a.createElement(d,s({ref:r},u))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=m;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var i=2;i<o;i++)s[i]=t[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},37451:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return i},toc:function(){return u},default:function(){return m}});var a=t(87462),n=t(63366),o=(t(67294),t(3905)),s=["components"],l={},c="Request Method",i={unversionedId:"n3/reference/scapi/framework/native/Oracle/Request",id:"n3/reference/scapi/framework/native/Oracle/Request",isDocsHomePage:!1,title:"Request Method",description:"Initiates an Oracle request.",source:"@site/docs/n3/reference/scapi/framework/native/Oracle/Request.md",sourceDirName:"n3/reference/scapi/framework/native/Oracle",slug:"/n3/reference/scapi/framework/native/Oracle/Request",permalink:"/website/docs/n3/reference/scapi/framework/native/Oracle/Request",editUrl:"https://github.com/neo-project/neo-dev-portal/blob/master/docs/n3/reference/scapi/framework/native/Oracle/Request.md",tags:[],version:"current",lastUpdatedBy:"Apisit",frontMatter:{},sidebar:"docs",previous:{title:"Oracle Class",permalink:"/website/docs/n3/reference/scapi/framework/native/Oracle"},next:{title:"OracleResponseCode Enumeration",permalink:"/website/docs/n3/reference/scapi/framework/native/OracleResponseCode"}},u=[{value:"Syntax",id:"syntax",children:[]},{value:"Example",id:"example",children:[]}],p={toc:u};function m(e){var r=e.components,t=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"request-method"},"Request Method"),(0,o.kt)("p",null,"Initiates an Oracle request."),(0,o.kt)("p",null,"Namespace: ",(0,o.kt)("a",{parentName:"p",href:"/website/docs/n3/reference/scapi/framework/native"},"Neo.SmartContract.Framework.Native")),(0,o.kt)("p",null,"Assembly: Neo.SmartContract.Framework"),(0,o.kt)("h2",{id:"syntax"},"Syntax"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"public static extern void Request(string url, string filter, string callback, object userData, long gasForResponse);\n")),(0,o.kt)("p",null,"Parameters\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"url: The request Url"),(0,o.kt)("li",{parentName:"ul"},"filter: Filter, used to filter useless data"),(0,o.kt)("li",{parentName:"ul"},"callback: Callback function"),(0,o.kt)("li",{parentName:"ul"},"userData: Additional data provided by the user"),(0,o.kt)("li",{parentName:"ul"},"long: The cost of getting a response")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},'namespace demo\n{\n    [DisplayName("Oracle Demo")]\n    [ManifestExtra("Author", "Neo")]\n    [ManifestExtra("Email", "dev@neo.org")]\n    [ManifestExtra("Description", "This is a Oracle contract example")]\n    public class OracleDemo: SmartContract\n    {\n        static readonly string PreResponseData = "ResponseData";\n\n        /// <summary>\n        /// Create a request.\n        /// </summary>\n        /// <param name="url">URL\uff0ce.g."http://127.0.0.1:8080/test"</param>\n        /// <param name="filter">Filter,e.g."$.value"; JSONPath, { "value": "hello world" }</param>\n        /// <param name="callback">Callback method,e.g."callback"</param>\n        /// <param name="userData">User data,e.g.new byte[0]</param>\n        /// <param name="gasForResponse">Gas for response,e.g.10000000</param>\n        public static void Request(string url,string filter,string callback,byte[] userData,long gasForResponse) {\n            Oracle.Request(url, filter, callback, userData, gasForResponse);\n        }\n\n        /// <summary>\n        /// Callback method\n        /// </summary>\n        /// <param name="url">Url</param>\n        /// <param name="userData">User data</param>\n        /// <param name="code">Response status</param>\n        /// <param name="result">Result data</param>\n        public static void Callback(string url, byte[] userData, int code, byte[] result) {\n            Storage.Put(Storage.CurrentContext, PreResponseData, result.ToByteString());\n        }\n        public static string GetData()\n        {\n            return Storage.Get(Storage.CurrentContext, PreResponseData);\n        }\n    }\n}\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/website/docs/n3/reference/scapi/framework/native/Oracle"},"Back")))}m.isMDXComponent=!0}}]);