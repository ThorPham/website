"use strict";(self.webpackChunkneo_dev_portal=self.webpackChunkneo_dev_portal||[]).push([[6013],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=p(r),m=i,g=f["".concat(s,".").concat(m)]||f[m]||u[m]||o;return r?n.createElement(g,a(a({ref:t},l),{},{components:r})):n.createElement(g,a({ref:t},l))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},54454:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return l},default:function(){return f}});var n=r(87462),i=r(63366),o=(r(67294),r(3905)),a=["components"],c={},s="TriggerType Enumeration",p={unversionedId:"n3/reference/scapi/framework/services/TriggerType",id:"n3/reference/scapi/framework/services/TriggerType",isDocsHomePage:!1,title:"TriggerType Enumeration",description:"This enumeration represents the type of smart contract triggers. Triggers enable the contract to execute different logic under different usage scenarios.",source:"@site/docs/n3/reference/scapi/framework/services/TriggerType.md",sourceDirName:"n3/reference/scapi/framework/services",slug:"/n3/reference/scapi/framework/services/TriggerType",permalink:"/website/docs/n3/reference/scapi/framework/services/TriggerType",editUrl:"https://github.com/neo-project/neo-dev-portal/blob/master/docs/n3/reference/scapi/framework/services/TriggerType.md",tags:[],version:"current",lastUpdatedBy:"Apisit",frontMatter:{},sidebar:"docs",previous:{title:"Transaction Class",permalink:"/website/docs/n3/reference/scapi/framework/services/Transaction"},next:{title:"Neo.SmartContract.Framework.Native",permalink:"/website/docs/n3/reference/scapi/framework/native"}},l=[{value:"Syntax",id:"syntax",children:[]}],u={toc:l};function f(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"triggertype-enumeration"},"TriggerType Enumeration"),(0,o.kt)("p",null,"This enumeration represents the type of smart contract triggers. Triggers enable the contract to execute different logic under different usage scenarios."),(0,o.kt)("p",null,"For more information about triggers, refer to ",(0,o.kt)("a",{parentName:"p",href:"/website/docs/n3/develop/write/basics"},"Smart Contract Basics"),"."),(0,o.kt)("p",null,"Namespace\uff1a",(0,o.kt)("a",{parentName:"p",href:"/website/docs/n3/reference/scapi/framework/services"},"Neo.SmartContract.Framework.Services")),(0,o.kt)("p",null,"Assembly: Neo.SmartContract.Framework"),(0,o.kt)("h2",{id:"syntax"},"Syntax"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"public enum TriggerType : byte\n{\n    OnPersist = 0x01,\n    PostPersist = 0x02,\n    Verification = 0x20,\n    Application = 0x40,\n    System = OnPersist | PostPersist,\n    All = OnPersist | PostPersist | Verification | Application\n}\n")),(0,o.kt)("p",null,"OnPersist: Indicate that the contract is triggered by the system to execute the OnPersist method of the native contracts."),(0,o.kt)("p",null,"PostPersist: Indicate that the contract is triggered by the system to execute the PostPersist method of the native contracts."),(0,o.kt)("p",null,"Verification: Indicates that the contract is triggered by the verification of a IVerifiable."),(0,o.kt)("p",null,"Application: Indicates that the contract is triggered by the execution of transactions."),(0,o.kt)("p",null,"System: The combination of all system triggers."),(0,o.kt)("p",null,"All: The combination of all triggers."))}f.isMDXComponent=!0}}]);