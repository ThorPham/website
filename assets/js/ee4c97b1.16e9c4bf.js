"use strict";(self.webpackChunkneo_dev_portal=self.webpackChunkneo_dev_portal||[]).push([[7288],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return d}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(r),d=o,m=u["".concat(s,".").concat(d)]||u[d]||f[d]||a;return r?n.createElement(m,i(i({ref:t},l),{},{components:r})):n.createElement(m,i({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},45660:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return l},default:function(){return u}});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),i=["components"],c={},s="Storage.Find Method",p={unversionedId:"n3/reference/scapi/framework/services/Storage/Find",id:"n3/reference/scapi/framework/services/Storage/Find",isDocsHomePage:!1,title:"Storage.Find Method",description:"Finds the content in the storage context that matches the specified prefix.",source:"@site/docs/n3/reference/scapi/framework/services/Storage/Find.md",sourceDirName:"n3/reference/scapi/framework/services/Storage",slug:"/n3/reference/scapi/framework/services/Storage/Find",permalink:"/website/docs/n3/reference/scapi/framework/services/Storage/Find",editUrl:"https://github.com/neo-project/neo-dev-portal/blob/master/docs/n3/reference/scapi/framework/services/Storage/Find.md",tags:[],version:"current",lastUpdatedBy:"Apisit",frontMatter:{},sidebar:"docs",previous:{title:"Storage.Delete Method",permalink:"/website/docs/n3/reference/scapi/framework/services/Storage/Delete"},next:{title:"Storage.Get Method",permalink:"/website/docs/n3/reference/scapi/framework/services/Storage/Get"}},l=[{value:"Syntax",id:"syntax",children:[]},{value:"Example",id:"example",children:[]}],f={toc:l};function u(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"storagefind-method"},"Storage.Find Method"),(0,a.kt)("p",null,"Finds the content in the storage context that matches the specified prefix."),(0,a.kt)("p",null,"Namespace: ",(0,a.kt)("a",{parentName:"p",href:"/website/docs/n3/reference/scapi/framework/services"},"Neo.SmartContract.Framework.Services")),(0,a.kt)("p",null,"Assembly: Neo.SmartContract.Framework"),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public static extern Iterator Find(StorageContext context, byte[] prefix, FindOptions options = FindOptions.None);\npublic static extern Iterator Find(StorageContext context, ByteString prefix, FindOptions options = FindOptions.None);\n")),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"context: Storage context as a ",(0,a.kt)("a",{parentName:"li",href:"/website/docs/n3/reference/scapi/framework/services/StorageContext"},"StorageContext")),(0,a.kt)("li",{parentName:"ul"},"prefix: Prefix as a byte array or string.")),(0,a.kt)("p",null,"Return value: The iterator composed of the elements  that meet conditions in the context."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'public class Contract1 : SmartContract.Framework.SmartContract\n{\n    public static void Main()\n    {\n        byte[] prefix1 = new byte[] { 0 };\n        string prefix2 = "aa";\n        Storage.Find(Storage.CurrentContext, prefix1);\n        Storage.Find(Storage.CurrentContext, prefix2);\n        Storage.Find(prefix1);\n        Storage.Find(prefix2);\n    }\n}\n')),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/website/docs/n3/reference/scapi/framework/services/Storage"},"Back")))}u.isMDXComponent=!0}}]);