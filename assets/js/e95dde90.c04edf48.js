"use strict";(self.webpackChunkneo_dev_portal=self.webpackChunkneo_dev_portal||[]).push([[1659],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(r),m=o,g=l["".concat(i,".").concat(m)]||l[m]||f[m]||a;return r?n.createElement(g,c(c({ref:t},u),{},{components:r})):n.createElement(g,c({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=l;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var p=2;p<a;p++)c[p]=r[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}l.displayName="MDXCreateElement"},37718:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return u},default:function(){return l}});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),c=["components"],s={},i="Storage.CurrentContext Property",p={unversionedId:"n3/reference/scapi/framework/services/Storage/CurrentContext",id:"n3/reference/scapi/framework/services/Storage/CurrentContext",isDocsHomePage:!1,title:"Storage.CurrentContext Property",description:"Returns the current storage context. After obtaining the storage context, the object can be passed as an argument to other contracts (as a way of authorization), allowing other contracts to perform read/write operations on the persistent store of the current contract.",source:"@site/docs/n3/reference/scapi/framework/services/Storage/CurrentContext.md",sourceDirName:"n3/reference/scapi/framework/services/Storage",slug:"/n3/reference/scapi/framework/services/Storage/CurrentContext",permalink:"/website/docs/n3/reference/scapi/framework/services/Storage/CurrentContext",editUrl:"https://github.com/neo-project/neo-dev-portal/blob/master/docs/n3/reference/scapi/framework/services/Storage/CurrentContext.md",tags:[],version:"current",lastUpdatedBy:"Apisit",frontMatter:{},sidebar:"docs",previous:{title:"Storage Class",permalink:"/website/docs/n3/reference/scapi/framework/services/Storage"},next:{title:"Storage.Delete Method",permalink:"/website/docs/n3/reference/scapi/framework/services/Storage/Delete"}},u=[{value:"Syntax",id:"syntax",children:[]}],f={toc:u};function l(e){var t=e.components,r=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"storagecurrentcontext-property"},"Storage.CurrentContext Property"),(0,a.kt)("p",null,"Returns the current storage context. After obtaining the storage context, the object can be passed as an argument to other contracts (as a way of authorization), allowing other contracts to perform read/write operations on the persistent store of the current contract."),(0,a.kt)("p",null,"Namespace: ",(0,a.kt)("a",{parentName:"p",href:"/website/docs/n3/reference/scapi/framework/services"},"Neo.SmartContract.Framework.Services")),(0,a.kt)("p",null,"Assembly: Neo.SmartContract.Framework"),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public static extern StorageContext CurrentContext {get;}\n")),(0,a.kt)("p",null,"Attribute value: Current storage context as a ",(0,a.kt)("a",{parentName:"p",href:"/website/docs/n3/reference/scapi/framework/services/StorageContext"},"StorageContext"),"."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/website/docs/n3/reference/scapi/framework/services/Storage"},"Back")))}l.isMDXComponent=!0}}]);