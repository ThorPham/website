"use strict";(self.webpackChunkneo_dev_portal=self.webpackChunkneo_dev_portal||[]).push([[3010],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=o,h=m["".concat(c,".").concat(u)]||m[u]||d[u]||r;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},11883:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},assets:function(){return p},toc:function(){return d},default:function(){return u}});var a=n(87462),o=n(63366),r=(n(67294),n(3905)),i=["components"],l={title:"neow3j - Java Smart Contract Quickstart",description:"In this quickstart guide, you will set up a smart contract project and get introduced to all tools necessary for contract development in Java.",author:"AxLabs",tags:["NEOW3J","SMART CONTRACT","JAVA"],skill:"beginner",image:"./assets/neow3j-padded.png",source:"https://github.com/neow3j/neow3j-boilerplate-contracts/tree/devportal-quickstart-tutorial",sidebar:!0},c=void 0,s={permalink:"/website/tutorials/2023/05/16/neow3j-smart-contract-quickstart",source:"@site/tutorials/2023-05-16-neow3j-smart-contract-quickstart/index.md",title:"neow3j - Java Smart Contract Quickstart",description:"In this quickstart guide, you will set up a smart contract project and get introduced to all tools necessary for contract development in Java.",date:"2023-05-16T00:00:00.000Z",formattedDate:"May 16, 2023",tags:[{label:"NEOW3J",permalink:"/website/tutorials/tags/neow-3-j"},{label:"SMART CONTRACT",permalink:"/website/tutorials/tags/smart-contract"},{label:"JAVA",permalink:"/website/tutorials/tags/java"}],readingTime:4.16,truncated:!1,authors:[{name:"AxLabs"}],prevItem:{title:"neow3j - Implementing a NEP-11 (NFT) Smart Contract in Java",permalink:"/website/tutorials/2023/05/16/neow3j-nep11"},nextItem:{title:"Neonjs Cheatsheet",permalink:"/website/tutorials/2022/10/30/neonjs-cheatsheet"}},p={image:n(79235).Z,authorsImageUrls:[void 0]},d=[{value:"1. Introduction",id:"1-introduction",children:[]},{value:"2. Setup",id:"2-setup",children:[{value:"Requirements",id:"requirements",children:[]},{value:"Development Environment",id:"development-environment",children:[]},{value:"Code",id:"code",children:[]}]},{value:"3. Compilation",id:"3-compilation",children:[{value:"Using the Gradle Task",id:"using-the-gradle-task",children:[]},{value:"Using the Compiler in Code",id:"using-the-compiler-in-code",children:[]}]},{value:"4. Development",id:"4-development",children:[]}],m={toc:d};function u(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("div",{align:"center",style:{padding:"0% 25% 0% 25%"}},(0,r.kt)("img",{src:"/tooling/neow3j.png",alt:"neow3j",width:"75%",style:{padding:"0% 0% 5% 0%"}}),(0,r.kt)("h1",null," ",(0,r.kt)("a",{href:"https://github.com/neow3j/neow3j"},"neow3j")," ",(0,r.kt)("sub",null,(0,r.kt)("small",null,"v3.20.1")))),(0,r.kt)("h2",{id:"1-introduction"},"1. Introduction"),(0,r.kt)("p",null,"Java Smart contracts are made possible through the neow3j devpack, which provides a smart contract library, a compiler\nand a test framework. Neow3j favors ",(0,r.kt)("a",{parentName:"p",href:"https://gradle.org"},"Gradle")," as the build tool. It offers a Gradle plugin that\nallows contract compilation via a Gradle task."),(0,r.kt)("h2",{id:"2-setup"},"2. Setup"),(0,r.kt)("h3",{id:"requirements"},"Requirements"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Java")),(0,r.kt)("p",null,"Smart contract development in Java requires a Java SDK of at least version 8. Checkout ",(0,r.kt)("a",{parentName:"p",href:"https://adoptium.net/"},"Adoptium"),"\nfor Java OpenJDK downloads."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Docker")),(0,r.kt)("p",null,"For running automated smart contract tests with neow3j you need to have\n",(0,r.kt)("a",{parentName:"p",href:"https://www.docker.com/products/docker-desktop"},"Docker")," installed."),(0,r.kt)("h3",{id:"development-environment"},"Development Environment"),(0,r.kt)("p",null,"You could write smart contracts in any editor, but we recommend using\n",(0,r.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/idea/download/"},"IntelliJ IDEA")," and ",(0,r.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/"},"Visual Studio Code"),".\nIntelliJ offers one of the best Java/Kotlin developer experiences while VS Code offers a powerful extension for\ndevelopment on Neo."),(0,r.kt)("p",null,"If you use VS Code make sure to install the\n",(0,r.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=ngd-seattle.neo-blockchain-toolkit"},"Neo Blockchain Toolkit"),"\nextension. It supports contract debugging, easy setup of private blockchains, and an in-editor block explorer.\nTo get familiar with the Blockchain Toolkit checkout the quickstart tutorials\n",(0,r.kt)("a",{parentName:"p",href:"https://ngdenterprise.com/neo-tutorials/quickstart1.html"},"here")," (the tutorials use C# as the smart contract\nlanguage).\nFor optimal Java support in VS Code we recommend using the\n",(0,r.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-pack"},"Java Extension Pack"),"."),(0,r.kt)("h3",{id:"code"},"Code"),(0,r.kt)("p",null,"For a quick setup of your smart contract project you can use the template project from our\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/neow3j/neow3j-boilerplate-contracts"},"neow3j-boilerplate-contracts"),' repository. It contains a simple\n"HelloWorld" smart contract.'),(0,r.kt)("p",null,"You can either click on ",(0,r.kt)("inlineCode",{parentName:"p"},"Use this template")," within GitHub to create your own repository from it, or clone it with the\nfollowing commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"git clone https://github.com/neow3j/neow3j-boilerplate-contracts.git\ncd neow3j-boilerplate-contracts && git checkout -b devportal-quickstart-tutorial\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"This tutorial is based on the branch ",(0,r.kt)("inlineCode",{parentName:"p"},"devportal-quickstart-tutorial"),", it might not be on the same commit as the ",(0,r.kt)("inlineCode",{parentName:"p"},"main"),"\nbranch."))),(0,r.kt)("h2",{id:"3-compilation"},"3. Compilation"),(0,r.kt)("h3",{id:"using-the-gradle-task"},"Using the Gradle Task"),(0,r.kt)("p",null,"With the setup from above, we can already compile our HelloWorld contract. Open a terminal in the project's root\ndirectory and run "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"./gradlew neow3jCompile\n")),(0,r.kt)("p",null,"This compiles the smart contract class ",(0,r.kt)("inlineCode",{parentName:"p"},"HelloWorldSmartContract"),", and places a NEF file, contract manifest, and\ndebugging information file by default at ",(0,r.kt)("inlineCode",{parentName:"p"},"build/neow3j"),". NEF file and contract manifest are described\n",(0,r.kt)("a",{parentName:"p",href:"/docs/n3/develop/write/manifest"},"here"),". They are the artifacts that are deployed on-chain. The debugging information\nfile is required by the Neo Debugger (part of the Neo Blockchain Toolkit) to debug your contract."),(0,r.kt)("h3",{id:"using-the-compiler-in-code"},"Using the Compiler in Code"),(0,r.kt)("p",null,"The neow3j compiler can also be invoked in Java code. This is practical if you are using Java code to deploy your\ncontract and want to compile your contract in the same code."),(0,r.kt)("p",null,"You will find an example for the compiler usage ",(0,r.kt)("inlineCode",{parentName:"p"},"com.axlabs.helloworld.Deployment")," in the boilerplate project."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"CompilationUnit res = new Compiler().compile(HelloWorldSmartContract.class.getCanonicalName());\n")),(0,r.kt)("p",null,"The compilation result is a ",(0,r.kt)("inlineCode",{parentName:"p"},"CompilationUnit")," which gives access to the NEF file and the contract manifest. They are\nused to call the ",(0,r.kt)("inlineCode",{parentName:"p"},"ContractManagement")," contract - a contract that is native to the Neo blockchain."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"TransactionBuilder builder = new ContractManagement(neow3j)\n    .deploy(res.getNefFile(), res.getManifest(), hash160(owner))\n    .signers(signer);\n")),(0,r.kt)("h2",{id:"4-development"},"4. Development"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Understanding Java for the NeoVM")),(0,r.kt)("p",null,"When using neow3j to implement smart contracts you will, at some point, have to understand the differences between\nnormal Java and Java for smart contract. Because smart contract code will run on the NeoVM and not on the JavaVM there\nare several restrictions. You can read about that\n",(0,r.kt)("a",{parentName:"p",href:"https://neow3j.io/#/neo-n3/smart_contract_development/neowjava"},"here"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Understanding the neow3j Devpack")),(0,r.kt)("p",null,"To get to know the neow3j devpack library you can consult the documentation\n",(0,r.kt)("a",{parentName:"p",href:"https://neow3j.io/#/neo-n3/smart_contract_development/devpack"},"here"),". It shows core features of the Neo smart\ncontract API, like storage, events, and native contracts, and explains how they are available in neow3j.\nOr, checkout one of the other neow3j tutorials on the developer portal to get a better idea of how Java smart contracts\nlook like."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Automated Testing")),(0,r.kt)("p",null,"When writing smart contracts testing is of utmost importance to feel confidence in one's code.  Neow3j offers a test\nframework that is build on top of JUnit 5. It is documented\n",(0,r.kt)("a",{parentName:"p",href:"https://neow3j.io/#/neo-n3/smart_contract_development/testing"},"here"),". The test class ",(0,r.kt)("inlineCode",{parentName:"p"},"HelloWorldSmartContractTest")," in\nthe boilerplate repository gives a first impression how contract tests with neow3j look."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Manual Testing")),(0,r.kt)("p",null,"Before you deploy your contract on the Neo mainnet, you will probably want to test it on a private network on your\nmachine and then on testnet. For local testing we recommend using the Neo Blockchain Toolkit mentioned in the\n",(0,r.kt)("a",{parentName:"p",href:"#development-environment"},"dev environment")," section.\nThe boilerplate repository already contains a ",(0,r.kt)("inlineCode",{parentName:"p"},"default.neo-express"),' configuration file that defines a private network\nwith one account called Alice. In VS Code open the command palette and type "Start blockchain". Execute the command. The\nprivate net will start. Again in the command palatte type "Transfer assets" and execute the command. Transfer 100 GAS\nfrom genesis to Alice. This is will create a transaction on the private net.\nNow you can run the main method in ',(0,r.kt)("inlineCode",{parentName:"p"},"com.axlabs.helloworld.Deployment")," (of the boilerplate repo) to deploy the contract on\nthe private net. "),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The underlying tool used for running private networks is Neo-Express. It can be separately installed and used as a\ncommand line tool ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/neo-project/neo-express#installation"},"here"),"."))))}u.isMDXComponent=!0},79235:function(e,t,n){t.Z=n.p+"assets/images/neow3j-padded-615b81c5d96703c064e509be65fee6ad.png"}}]);