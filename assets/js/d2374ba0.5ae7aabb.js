"use strict";(self.webpackChunkneo_dev_portal=self.webpackChunkneo_dev_portal||[]).push([[9484],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=p(n),m=a,d=f["".concat(i,".").concat(m)]||f[m]||u[m]||c;return n?r.createElement(d,o(o({ref:t},s),{},{components:n})):r.createElement(d,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,o=new Array(c);o[0]=f;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<c;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},58210:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return s},default:function(){return f}});var r=n(87462),a=n(63366),c=(n(67294),n(3905)),o=["components"],l={},i="GAS.BalanceOf Method",p={unversionedId:"n3/reference/scapi/framework/native/Gas/BalanceOf",id:"n3/reference/scapi/framework/native/Gas/BalanceOf",isDocsHomePage:!1,title:"GAS.BalanceOf Method",description:"Gets the GAS balance in the account.",source:"@site/docs/n3/reference/scapi/framework/native/Gas/BalanceOf.md",sourceDirName:"n3/reference/scapi/framework/native/Gas",slug:"/n3/reference/scapi/framework/native/Gas/BalanceOf",permalink:"/website/docs/n3/reference/scapi/framework/native/Gas/BalanceOf",editUrl:"https://github.com/neo-project/neo-dev-portal/blob/master/docs/n3/reference/scapi/framework/native/Gas/BalanceOf.md",tags:[],version:"current",lastUpdatedBy:"Apisit",frontMatter:{},sidebar:"docs",previous:{title:"GAS Class",permalink:"/website/docs/n3/reference/scapi/framework/native/Gas"},next:{title:"GAS.TotalSupply Method",permalink:"/website/docs/n3/reference/scapi/framework/native/Gas/TotalSupply"}},s=[{value:"Syntax",id:"syntax",children:[]},{value:"Example",id:"example",children:[]}],u={toc:s};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,c.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"gasbalanceof-method"},"GAS.BalanceOf Method"),(0,c.kt)("p",null,"Gets the GAS balance in the account."),(0,c.kt)("p",null,"Namespace: ",(0,c.kt)("a",{parentName:"p",href:"/website/docs/n3/reference/scapi/framework/native"},"Neo.SmartContract.Framework.Native")),(0,c.kt)("p",null,"Assembly: Neo.SmartContract.Framework"),(0,c.kt)("h2",{id:"syntax"},"Syntax"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cs"},"public static extern BigInteger BalanceOf(byte[] account);\n")),(0,c.kt)("p",null,"Parameters:"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"account: Script hash of the account")),(0,c.kt)("h2",{id:"example"},"Example"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cs"},'public class Contract1 : SmartContract.Framework.SmartContract\n{\n    private static readonly UInt160 account = "NXsG3zwpwcfvBiA3bNMx6mWZGEro9ZqTqM".ToScriptHash();\n\n    public static object Test()\n    {\n        BigInteger result = GAS.BalanceOf(account);\n        return result;\n    }\n}\n')),(0,c.kt)("p",null,"Response body:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Type":"Integer",\n    "value":"100000000"\n}\n')),(0,c.kt)("p",null,"Response description"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Integer type: The account balance obtained successfully.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Other: failed."))),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"/website/docs/n3/reference/scapi/framework/native/Gas"},"Back")))}f.isMDXComponent=!0}}]);